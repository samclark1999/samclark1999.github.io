// Responsive mixins
@mixin media-breakpoint-up($breakpoint) {
  @if $breakpoint == xs {
    @content;
  } @else {
    @media (min-width: map-get($grid-breakpoints, $breakpoint)) {
      @content;
    }
  }
}

@mixin media-breakpoint-down($breakpoint) {
  @media (max-width: #{map-get($grid-breakpoints, $breakpoint) - 1px}) {
    @content;
  }
}

// Button mixins
@mixin button-variant($background, $border, $hover-background: darken($background, 7.5%), $hover-border: darken($border, 10%)) {
  background-color: $background;
  border-color: $border;
  
  &:hover {
    background-color: $hover-background;
    border-color: $hover-border;
  }
}

// Utility mixins
@mixin transition($property: all, $duration: 0.3s, $timing: ease) {
  transition: $property $duration $timing;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin text-gradient($start-color, $end-color) {
  background: linear-gradient(45deg, $start-color, $end-color);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

// Section padding mixin
@mixin section-padding($padding: $section-padding) {
  padding: $padding;
}